{{ ansible_managed | comment }}
[Unit]
Description=Tailon service
Requires=network.target

[Service]
Type=simple
ExecStart={{ tailon_dst_bin | default('/usr/local/bin') }}/tailon {{ tailon_args }} {{ tailon_logs_list | join(' ')}}
WorkingDirectory={{ tailon_working_dir | default('/var/tmp') }}
Restart=always
RestartSec=10
StandardOutput=syslog
User={{ tailon_user }}
Group={% if ansible_os_family == "RedHat" %}nobody{% else %}nogroup{% endif %}


# Only if tailon_port < 1024
#AmbientCapabilities=CAP_NET_BIND_SERVICE
#CapabilityBoundingSet=CAP_NET_BIND_SERVICE

NoNewPrivileges=yes
# Reduce Attack Surface
PrivateTmp=true
PrivateDevices=yes
ProtectHome=yes
ProtectSystem=full
{% if (ansible_os_family == 'RedHat' and ansible_distribution_major_version|int > 7) or (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int >= 18) %}
InaccessiblePaths=/proc
ProtectKernelTunables=true
ProtectKernelModules=yes
ProtectControlGroups=true
RestrictRealtime=true
RestrictNamespaces=~user mnt
LockPersonality=true
{% endif %}
RestrictAddressFamilies=AF_INET AF_INET6
{% if not (ansible_virtualization_type is defined and
          ansible_virtualization_type == "docker"
        )
%}
{% if (ansible_os_family == 'RedHat' and ansible_distribution_major_version|int >= 8) or (ansible_distribution == "Ubuntu" and ansible_distribution_major_version|int > 18) %}
SystemCallFilter=@system-service
{% endif %}
SystemCallFilter=~@debug @mount @cpu-emulation @obsolete @privileged
# When system call is disallowed, return error code instead of killing process
SystemCallErrorNumber=EPERM
{% endif %}
CPUShares={{ tailon_cgroups_cpushares | default('1024') }}
CPUQuota={{ tailon_cgroups_cpuquota | default('20%') }}
MemoryLimit={{ tailon_cgroups_memorylimit | default('1G') }}

# Network restrictions
IPAddressAllow={{ tailon_ipaddressallow | default('10.0.0.0/8 192.168.1.0/24 localhost') }}
IPAddressDeny=any

[Install]
WantedBy=multi-user.target
