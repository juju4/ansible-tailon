{{ ansible_managed | comment }}

[Unit]
Description=Tailon service
Requires=network.target

[Service]
Type=simple
ExecStart={{ tailon_dst_bin | default('/usr/local/bin') }}/tailon {{ tailon_args }} {{ tailon_logs_list | join(' ') }}
WorkingDirectory={{ tailon_working_dir | default('/var/tmp') }}
Restart=always
RestartSec=10
User={{ tailon_user }}
{% if ansible_os_family == "RedHat" %}
Group=nobody
{% else %}
Group=nogroup
{% endif %}


# Hardening
NoNewPrivileges=yes
# Reduce Attack Surface
PrivateTmp=true
PrivateDevices=yes
ProtectHome=yes
ProtectSystem=full
ProtectProc=noaccess
InaccessiblePaths=/proc
UMask=077
# ReadWritePaths=
ReadOnlyPaths=/var/log
ProtectKernelTunables=true
ProtectKernelModules=yes
ProtectKernelLogs=yes
# ProtectHostname=yes
ProtectClock=yes
ProtectControlGroups=true
LockPersonality=true
RestrictRealtime=true
RestrictNamespaces=yes
RestrictSUIDSGID=yes
MemoryDenyWriteExecute=yes

RestrictAddressFamilies=AF_INET AF_INET6
RestrictAddressFamilies=~AF_NETLINK AF_PACKET AF_UNIX

IPAccounting=yes
{# j2lint: disable=jinja-variable-format #}
IPAddressAllow={{ tailon_ipaddressallow | default('localhost link-local multicast 10.0.0.0/8 192.168.1.0/24') }}
# IPAddressDeny=

# Only if tailon_port < 1024
# AmbientCapabilities=CAP_NET_BIND_SERVICE
# CapabilityBoundingSet=CAP_NET_BIND_SERVICE
CapabilityBoundingSet=~CAP_AUDIT_CONTROL CAP_AUDIT_READ CAP_DAC_READ_SEARCH
CapabilityBoundingSet=~CAP_BLOCK_SUSPEND
CapabilityBoundingSet=~CAP_DAC_* CAP_FOWNER CAP_IPC_OWNER
CapabilityBoundingSet=~CAP_FSETID CAP_SETFCAP
CapabilityBoundingSet=~CAP_IPC_LOCK
CapabilityBoundingSet=~CAP_KILL
CapabilityBoundingSet=~CAP_LEASE
CapabilityBoundingSet=~CAP_LINUX_IMMUTABLE
CapabilityBoundingSet=~CAP_NET_ADMIN
CapabilityBoundingSet=~CAP_NET_BROADCAST
CapabilityBoundingSet=~CAP_NET_RAW
CapabilityBoundingSet=~CAP_SETUID CAP_SETGID CAP_SETPCAP
CapabilityBoundingSet=~CAP_SETPCAP
CapabilityBoundingSet=~CAP_SYS_RAWIO
CapabilityBoundingSet=~CAP_SYS_PTRACE
CapabilityBoundingSet=~CAP_SYS_NICE CAP_SYS_RESOURCE
CapabilityBoundingSet=~CAP_SYS_BOOT
CapabilityBoundingSet=~CAP_SYS_CHROOT
CapabilityBoundingSet=~CAP_SYS_PACCT
CapabilityBoundingSet=~CAP_SYS_TTY_CONFIG
CapabilityBoundingSet=~CAP_SYS_ADMIN

{% if not (ansible_virtualization_type is defined and
          ansible_virtualization_type == "docker"
        )
%}
SystemCallFilter=@system-service
SystemCallFilter=~@clock @cpu-emulation @debug @module @mount @obsolete @privileged @raw-io @reboot @swap
SystemCallArchitectures=native
# When system call is disallowed, return error code instead of killing process
SystemCallErrorNumber=EPERM
{% endif %}

CPUWeight={{ tailon_cgroups_cpushares | default('20') }}
CPUQuota={{ tailon_cgroups_cpuquota | default('20%') }}
MemoryMax={{ tailon_cgroups_memorylimit | default('1G') }}
IOWeight={{ tailoncgroups_cpushares | default('20') }}

[Install]
WantedBy=multi-user.target
