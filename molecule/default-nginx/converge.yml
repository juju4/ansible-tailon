---
- name: Converge
  hosts: all
  environment:
    http_proxy: "{{ lookup('env', 'http_proxy') }}"
    https_proxy: "{{ lookup('env', 'https_proxy') }}"
    no_proxy: "{{ lookup('env', 'no_proxy') }}"
  remote_user: root
  vars:
    tailon_logs_list:
      - /var/log/syslog
      - /var/log/auth.log
    hardenwebserver_disable_http: true
    hardenwebserver_https_template: nginx.conf.j2
    hardenwebserver_header_csp: "default-src 'none'; script-src 'self' 'report-sample' 'unsafe-inline'; connect-src 'self'; img-src 'self'; style-src 'self' 'unsafe-inline'; font-src 'self' data: ; base-uri 'none'; frame-ancestors 'none'; form-action 'self'; upgrade-insecure-requests; report-uri /csp/report.php;"
    hardenwebserver_target_host_cn: "{{ ansible_fqdn }}"
    hardenwebserver_target_host_san:
      - "{{ ansible_fqdn }}"
      - "{{ ansible_hostname }}"
      - "{{ ansible_default_ipv4.address | default(ansible_all_ipv4_addresses[0]) }}"
    hardenwebserver_systemd_dir_acl:
      - { p: "/etc/ssl/private", perm: rx, m: '0710' }
      - { p: "/var/log/nginx", perm: rwx, m: '0755' }
    hardenwebserver_systemd_files_acl:
      # - { p: "/etc/letsencrypt/live/{{ cribl_fqdn }}/privkey.pem", perm: r }
      - { p: "/etc/ssl/private/dhparam4.pem", perm: r }
      - { p: "/etc/ssl/private/{{ hardenwebserver_target_host_cn }}.key", perm: r }
      - { p: "/etc/ssl/certs/{{ hardenwebserver_target_host_cn }}.crt", perm: r }
      - { p: "/var/log/nginx/access.log", perm: rw }
      - { p: "/var/log/nginx/access_json.log", perm: rw }
      - { p: "/var/log/nginx/error.log", perm: rw }
      - { p: "/var/log/nginx/tailon.access.log", perm: rw }
      - { p: "/var/log/nginx/tailon.error.log", perm: rw }
  pre_tasks:
    - name: Ubuntu | Install python3
      ansible.builtin.raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3-minimal)
      register: python3
      changed_when: "'installed' in python3.stdout"
      when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16)
    - name: RedHat | Install python3
      ansible.builtin.raw: test -e /usr/bin/python3 || (yum install -y python3)
      register: python3
      changed_when: "'installed' in python3.stdout"
      when: (ansible_os_family == "RedHat" and ansible_distribution_major_version | int >= 8)
    - name: Gather Facts
      ansible.builtin.setup:
      when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16)
    - name: Ubuntu Bionic+, Redhat 8+ | Enforce python3 for ansible
      ansible.builtin.set_fact:
        ansible_python_interpreter: /usr/bin/python3
      when: >
        (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16) or
        (ansible_os_family == "RedHat" and ansible_distribution_major_version | int >= 8)
    - name: Debian | Refresh apt cache
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"
    - name: Debug | var ansible_virtualization_type
      ansible.builtin.debug:
        var: ansible_virtualization_type
  roles:
    - juju4.tailon
